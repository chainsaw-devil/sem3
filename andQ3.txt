Q3.
3. Write an android application  (1) to send message  (sms). (2) to receive alert for incoming message using broadcast receiver (3) to read and display the messages from message box. 

//mainactivity.java


package com.example.sms;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import android.Manifest;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.telephony.SmsManager;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    EditText ed1,ed2;
    Button btn;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        ed1=(EditText) findViewById(R.id.edittxtphone);
        ed2=(EditText) findViewById(R.id.edittxtmesg);
        btn=(Button) findViewById(R.id.btnsend);


    }

    public void onsend(View view) {
        if(ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.SEND_SMS)
        == PackageManager.PERMISSION_GRANTED){

            sendSMS();
        }
        else
        {
            ActivityCompat.requestPermissions(MainActivity.this,new String[]{Manifest.permission.SEND_SMS},100);
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);

        if(requestCode==100 && grantResults.length>0 && grantResults[0]==PackageManager.PERMISSION_GRANTED)
        {
            sendSMS();
        }
        else
        {
            Toast.makeText(this, "permision denied!!!", Toast.LENGTH_SHORT).show();
        }
    }

    private void sendSMS() {

        String phone=ed1.getText().toString();
        String msg=ed2.getText().toString();

        if(!phone.isEmpty() && !msg.isEmpty())
        {
            SmsManager smsManager=SmsManager.getDefault();

            smsManager.sendTextMessage(phone,null,msg,null,null);

            Toast.makeText(this, "SMS sent successfully...", Toast.LENGTH_SHORT).show();
        }
        else
        {
            Toast.makeText(this, "plz enter phone and message", Toast.LENGTH_SHORT).show();
        }
    }
}



//activity.java


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:orientation="vertical">

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="                                SMS "
        android:textAppearance="@style/TextAppearance.AppCompat.Large" />

    <EditText
        android:id="@+id/edittxtphone"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:inputType="textPersonName"
        android:hint="Enter Phone no... "
        android:maxLength="10"

        android:text="" />

    <EditText
        android:id="@+id/edittxtmesg"
        android:layout_width="match_parent"
        android:layout_height="197dp"
        android:hint="Enter Messages... "
        android:inputType="textPersonName"
        android:lines="5"
        android:padding="15sp"
        android:text="" />

    <Button
        android:id="@+id/btnsend"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Send"
        android:onClick="onsend"/>


</LinearLayout>